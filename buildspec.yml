version: 0.2

phases:   
  install:
    runtime-versions:
      dotnet: latest
    commands:
      - dotnet restore SportApp.sln
      - dotnet test /p:CollectCoverage=true /p:CoverletOutputFormat=opencover
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 526323850299.dkr.ecr.us-east-1.amazonaws.com
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build -t sportapp_api .
      - docker tag sportapp_api:latest 526323850299.dkr.ecr.us-east-1.amazonaws.com/sportapp_api:latest
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker push 526323850299.dkr.ecr.us-east-1.amazonaws.com/sportapp_api:latest
      - echo Writing Image Definitions file...
      - printf '[{"name":"container-sportapp-api","imageUri":"526323850299.dkr.ecr.us-east-1.amazonaws.com/sportapp_api:latest"}]' > imagedefinitions.json
      - printf '{"ImageURI":"526323850299.dkr.ecr.us-east-1.amazonaws.com/sportapp_api:latest"}' > imageDetail.json
      - cat imagedefinitions.json 
artifacts:
  files:
    - '**/*'
    - imagedefinitions.json
    - imageDetail.json
  secondary-artifacts:
    DefinitionArtifact:
      files:
        - appspec.yaml
        - taskdef.json
    ImageArtifact:
      files:
        - imageDetail.json